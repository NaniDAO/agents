export const PERMITS_ABI = [
  {
    inputs: [{ internalType: "contract IIE", name: "ie", type: "address" }],
    stateMutability: "payable",
    type: "constructor",
  },
  { inputs: [], name: "InvalidCall", type: "error" },
  { inputs: [], name: "Overwrite", type: "error" },
  { inputs: [], name: "Reentrancy", type: "error" },
  { inputs: [], name: "TransferFailed", type: "error" },
  { inputs: [], name: "Unauthorized", type: "error" },
  { inputs: [], name: "UsesExceeded", type: "error" },
  { inputs: [], name: "UsesExpired", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "agent",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "commandHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "PermissionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "agent",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "commandHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldPrompt",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newPrompt",
        type: "string",
      },
    ],
    name: "PermissionPromptUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "agent",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "commandHash",
        type: "bytes32",
      },
    ],
    name: "PermissionRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "agent",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "commandHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "command",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "prompt",
        type: "string",
      },
      { indexed: false, internalType: "uint32", name: "uses", type: "uint32" },
      {
        indexed: false,
        internalType: "uint48",
        name: "expiry",
        type: "uint48",
      },
    ],
    name: "PermissionSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenApproved",
    type: "event",
  },
  {
    inputs: [],
    name: "IE",
    outputs: [{ internalType: "contract IIE", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "address", name: "agent", type: "address" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    name: "agentCommands",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "contract IERC20", name: "token", type: "address" },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "commandHash", type: "bytes32" }],
    name: "commands",
    outputs: [{ internalType: "string", name: "command", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "string", name: "command", type: "string" },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "address", name: "agent", type: "address" },
    ],
    name: "getAgentCommands",
    outputs: [{ internalType: "bytes32[]", name: "", type: "bytes32[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "agent", type: "address" }],
    name: "getAgentOwners",
    outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "agent", type: "address" }],
    name: "getAllActivePermissionsForAgent",
    outputs: [
      {
        components: [
          { internalType: "bool", name: "active", type: "bool" },
          { internalType: "uint32", name: "usesLeft", type: "uint32" },
          { internalType: "uint48", name: "timeLeft", type: "uint48" },
          { internalType: "address", name: "inputToken", type: "address" },
          { internalType: "address", name: "outputToken", type: "address" },
          { internalType: "uint256", name: "inputAmount", type: "uint256" },
          { internalType: "bool", name: "isSwap", type: "bool" },
          { internalType: "string", name: "commandString", type: "string" },
          { internalType: "string", name: "prompt", type: "string" },
          { internalType: "uint48", name: "createdAt", type: "uint48" },
          { internalType: "uint48", name: "lastUsedAt", type: "uint48" },
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "address", name: "agent", type: "address" },
        ],
        internalType: "struct Permits.PermissionDetails[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "getAllActivePermissionsForOwner",
    outputs: [
      {
        components: [
          { internalType: "bool", name: "active", type: "bool" },
          { internalType: "uint32", name: "usesLeft", type: "uint32" },
          { internalType: "uint48", name: "timeLeft", type: "uint48" },
          { internalType: "address", name: "inputToken", type: "address" },
          { internalType: "address", name: "outputToken", type: "address" },
          { internalType: "uint256", name: "inputAmount", type: "uint256" },
          { internalType: "bool", name: "isSwap", type: "bool" },
          { internalType: "string", name: "commandString", type: "string" },
          { internalType: "string", name: "prompt", type: "string" },
          { internalType: "uint48", name: "createdAt", type: "uint48" },
          { internalType: "uint48", name: "lastUsedAt", type: "uint48" },
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "address", name: "agent", type: "address" },
        ],
        internalType: "struct Permits.PermissionDetails[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "address", name: "agent", type: "address" },
      { internalType: "bytes32", name: "commandHash", type: "bytes32" },
    ],
    name: "getDetailedPermission",
    outputs: [
      {
        components: [
          { internalType: "bool", name: "active", type: "bool" },
          { internalType: "uint32", name: "usesLeft", type: "uint32" },
          { internalType: "uint48", name: "timeLeft", type: "uint48" },
          { internalType: "address", name: "inputToken", type: "address" },
          { internalType: "address", name: "outputToken", type: "address" },
          { internalType: "uint256", name: "inputAmount", type: "uint256" },
          { internalType: "bool", name: "isSwap", type: "bool" },
          { internalType: "string", name: "commandString", type: "string" },
          { internalType: "string", name: "prompt", type: "string" },
          { internalType: "uint48", name: "createdAt", type: "uint48" },
          { internalType: "uint48", name: "lastUsedAt", type: "uint48" },
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "address", name: "agent", type: "address" },
        ],
        internalType: "struct Permits.PermissionDetails",
        name: "details",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "getOwnerAgents",
    outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "getOwnerStats",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalPermissions",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activePermissions",
            type: "uint256",
          },
          { internalType: "uint256", name: "totalExecutions", type: "uint256" },
          { internalType: "uint48", name: "lastActivityTime", type: "uint48" },
        ],
        internalType: "struct Permits.OwnerStats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "address", name: "token", type: "address" },
    ],
    name: "getTokenPermissions",
    outputs: [
      {
        components: [
          { internalType: "bool", name: "active", type: "bool" },
          { internalType: "uint32", name: "usesLeft", type: "uint32" },
          { internalType: "uint48", name: "timeLeft", type: "uint48" },
          { internalType: "address", name: "inputToken", type: "address" },
          { internalType: "address", name: "outputToken", type: "address" },
          { internalType: "uint256", name: "inputAmount", type: "uint256" },
          { internalType: "bool", name: "isSwap", type: "bool" },
          { internalType: "string", name: "commandString", type: "string" },
          { internalType: "string", name: "prompt", type: "string" },
          { internalType: "uint48", name: "createdAt", type: "uint48" },
          { internalType: "uint48", name: "lastUsedAt", type: "uint48" },
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "address", name: "agent", type: "address" },
        ],
        internalType: "struct Permits.PermissionDetails[]",
        name: "tokenPerms",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "address", name: "agent", type: "address" },
      { internalType: "bytes32", name: "commandHash", type: "bytes32" },
    ],
    name: "isPermissionValid",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "address", name: "agent", type: "address" },
      { internalType: "bytes32", name: "commandHash", type: "bytes32" },
    ],
    name: "permissions",
    outputs: [
      { internalType: "uint32", name: "uses", type: "uint32" },
      { internalType: "uint32", name: "used", type: "uint32" },
      { internalType: "uint48", name: "end", type: "uint48" },
      { internalType: "uint48", name: "createdAt", type: "uint48" },
      { internalType: "uint48", name: "lastUsedAt", type: "uint48" },
      { internalType: "string", name: "prompt", type: "string" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "agent", type: "address" },
      { internalType: "bytes32", name: "commandHash", type: "bytes32" },
    ],
    name: "revokePermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "agent", type: "address" },
      { internalType: "string", name: "command", type: "string" },
      { internalType: "uint32", name: "uses", type: "uint32" },
      { internalType: "uint48", name: "end", type: "uint48" },
      { internalType: "string", name: "prompt", type: "string" },
    ],
    name: "setPermission",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "address", name: "agent", type: "address" },
    ],
    name: "tipped",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "address", name: "token", type: "address" },
      { internalType: "bytes32", name: "commandHash", type: "bytes32" },
    ],
    name: "tokenCommandAgents",
    outputs: [{ internalType: "address", name: "agent", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "agent", type: "address" },
      { internalType: "bytes32", name: "commandHash", type: "bytes32" },
      { internalType: "string", name: "newPrompt", type: "string" },
    ],
    name: "updatePermissionPrompt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  { stateMutability: "payable", type: "receive" },
] as const;
